name: static checks
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-20.04

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.18"

      - name: Checkout repo
        uses: actions/checkout@v3

  unit:
    name: Unit Tests with Code coverage
    runs-on: ubuntu-20.04

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.18"

      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Run Go Tests
        run: make test
  
      - name: Check format
        run: |
          if [[ $(go fmt `go list ./... | grep -v vendor`) ]]; then
            echo "not well formatted sources are found"
            exit 1
          fi

      - name: Generate coverage report
        run: |
          go test `go list ./... | grep -v examples` -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella  

      - name: Get code coverage artifiact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: code-coverage
      - name: Get test result artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: test-results
          path: test-results
      - name: Upload code coverage information to codecov.io
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          file: coverage.out
